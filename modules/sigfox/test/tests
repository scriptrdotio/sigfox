var deviceTypeMgt = require("../devicetypemanagement");
var deviceType = require("../devicetype");
var deviceMgt = require("../devicemanagement");

try {

     /*** Device type operations ***/
    
    /*
     * Create an instance of a device in scritr.io and get the network state of the corresponding device on Sigfox
     */
    var deviceMgr = new deviceMgt.DeviceManager({login:"58ad6c0de0102e0f347954eb", password: "44e96a007c9bb6fd96e7a3a430643f12"});
    var device = deviceMgr.getDevice("19650");
    //return device.getNetworkState();

    
    /*** Device type operations and callbacks ***/
    var deviceTypeMgr = new deviceTypeMgt.DeviceTypeManager({login:"58ad6c0de0102e0f347954eb", password: "44e96a007c9bb6fd96e7a3a430643f12"});
    // default config for the remainders of the tests 
    var deviceTypeId = "58ad5ce3e0102e0f34795364";

    /*
     * list available device types 
     */
    //var deviceTypeList = deviceTypeMgr.listDeviceTypes();
    //return deviceTypeList;  
    
    /*
     * get an instance of DeviceType
     */
    //var deviceType = deviceTypeMgr.getDeviceType(deviceTypeId);
    //return deviceType;

    /*
     * Create URL callbacks
     */    
    var callback = {
        "url": "https://sigfox.scriptrapps.io/modules/sigfox/callbacks/defaultCallback?auth_token=UzIyQTgwRjc2Ng==",
        "contentType": "text/plain"
    };

    //var createCallbackResult = deviceType.createURLCallbacks([callback]);
    //return createCallbackResult;

    /*
     * Create Batch URL callbacks
     */   
    var callback = {
        "contentType": "application/json"
    };

    //var createBatchCallbackResult = deviceType.createBatchURLCallbacks([callback]);
    //return createBatchCallbackResult;

    /*
     * Create EMAIL callbacks
     */    
    var callback = {
        "recipient": "karim@scriptr.io",
        "subject": "Device data",
        "message": "{device} sent {data} on {time}"
    };

    //var createCallbackResult = deviceType.createEMAILCallbacks([callback]);
    //return createCallbackResult;

    /*
     * List created callbacks
     */
    //var callbackList = deviceType.listCallbacks();
    //return callbackList;

    /*
     * List created callbacks with channel == URL
     */
    //var callbackList = deviceType.listCallbacks("URL");
    //return callbackList;

     /*
      * Delete callback (depends on the preceding test)
      */  
     //return deviceTypeList[0].deleteCallback(callbackList[0].id);
}catch(exception){
    return exception;
}