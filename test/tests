var deviceTypeMgt = require("../devicetypemanagement");
var deviceType = require("../devicetype");
var deviceMgt = require("../devicemanagement");
var loaderModuler = require("../missedmessages/loader");

try {

     /*** Device type operations ***/
    
    /*
     * Create an instance of a device in scritr.io and get the network state of the corresponding device on Sigfox
     */
    var deviceMgr = new deviceMgt.DeviceManager({login:"sigfox_login", password: "sigfox_password"});
    var device = deviceMgr.getDevice("19650");
    //return device.getNetworkState();

    
    /*** Device type operations and callbacks ***/
    var deviceTypeMgr = new deviceTypeMgt.DeviceTypeManager({login:"sigfox_login", password: "sigfox_password"});
    // default config for the remainders of the tests 
    var deviceTypeId = "58ad5ce3e0102e0f34795364";

    /*
     * list available device types 
     */
    //var deviceTypeList = deviceTypeMgr.listDeviceTypes({"groupIds":"58ad5b79e0102e0f347952e7","deep":"true"});
    //return deviceTypeList;  
    
    /*
     * get an instance of DeviceType
     */
    var deviceType = deviceTypeMgr.getDeviceType(deviceTypeId);
    //return deviceType;

    /*
     * Create URL callbacks
     */    
    var callback = {
        "url": "https://your_sub_domain.scriptrapps.io/callbacks/defaultCallback?auth_token=a_valid_scriptr.io_auth_token",
        "contentType": "text/plain"
    };

    //var createCallbackResult = deviceType.createURLCallbacks([callback]);
    //return createCallbackResult;

    /*
     * Create Batch URL callbacks
     */   
    var callback = {
        "contentType": "application/json"
    };

    //var createBatchCallbackResult = deviceType.createBatchURLCallbacks([callback]);
    //return createBatchCallbackResult;

    /*
     * Create EMAIL callbacks
     */    
    var callback = {
        "recipient": "karim@scriptr.io",
        "subject": "Device data",
        "message": "{device} sent {data} on {time}"
    };

    //var createCallbackResult = deviceType.createEMAILCallbacks([callback]);
    //return createCallbackResult;

    /*
     * List created callbacks
     */
    //var callbackList = deviceType.listCallbacks();
    //return callbackList;

    /*
     * List created callbacks with channel == URL
     */
    //var callbackList = deviceType.listCallbacks("URL");
    //return callbackList;

     /*
      * Update callback
      */  
     var callback = {
         "url": "https://alex.scriptrapps.io/callbacks/defaultCallback?auth_token=Q0QxNjdCRTBFRjpzaWdmb3g6MThGNDJGRkVCRTJBQ0E3RTM5MTBDQjBDNTJDNDE4QUU=",
         "enabled": false
     };
     return deviceType.updateURLCallback("5da439b9e0102e186cb15302", callback);
     //return deviceType.updateBatchURLCallback("5da03091e0102e186cb0c7ea", callback);
     //return deviceType.updateEMAILCallback("5da03091e0102e186cb0c7ea", callback);
    
     /*
      * Delete callback
      */  
     //return deviceType.deleteCallback("5da03091e0102e186cb0c7ea");
    
    /*
     * Enable/Disable callbacks
     */
    //var resp = deviceType.enableCallback("593ea354e0102e0f347da234");
    //var resp = deviceType.disableCallback("593ea354e0102e0f347da234");
    //return resp;
    
    var dto = {
        hexId: "19650"
        //deviceTypeId: "58ad5ce3e0102e0f34795364"
        //groupId: "58ad5b79e0102e0f347952e7"
    };
    
    var loader = new loaderModuler.Loader({handlers:{"default": "/sigfox/missedmessages/defaulthandler"}});
    return loader.loadNextMissedMessages(dto); 
    
}catch(exception){
    return exception;
}
